<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[高等数值分析]]></title>
    <url>%2F2019%2F12%2F13%2Fgaozhi%2F</url>
    <content type="text"><![CDATA[高等数值分析第一次实验（Word编写） 高等数值分析第二次实验（Latex编写）]]></content>
      <categories>
        <category>download</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Matlab]]></title>
    <url>%2F2019%2F11%2F25%2Fmatlab%2F</url>
    <content type="text"><![CDATA[1.输入输出参量可变的函数实现方法1：说明：nargin,nargout函数，建议里面用为else if省去许多end 123clc;clear;close;a=9;b=200;c=30;[max,num]=maxium(a,b,c) 1234567891011121314151617181920212223242526function [first,second]=maxium(a,b,c)switch nargin case 3 %相当于一个输入变量为3的函数 if a&gt;b max="a";num=a; else max="b";num=b; end if num&lt;c max="c";num=c; end case 2 %相当于一个输入变量为2的函数 if a&gt;b max="a";num=a; else max="b",num=b; endendswitch nargout case 2 first=max; %相当于一个输出变量为2的函数 second=num; case 1 first=num; %相当于一个输出变量为1的函数endend 1234567891011121314151617181920212223242526function [first,second]=maxium(a,b,c)if nargin==3 %相当于一个输入变量为3的函数 if a&gt;b max="a";num=a; else max="b";num=b; end if num&lt;c max="c";num=c; endendif nargin==2 %相当于一个输入变量为2的函数 if a&gt;b max="a";num=a; else max="b",num=b; endendif nargout==2 %相当于一个输出变量为2的函数 first=max; second=num;endif nargout==1 %相当于一个输出变量为1的函数 first=num; endend 实现方法2：说明：使用varargin,varargout函数 123clc;clear;close;a=9;b=200;c=30;[max,num]=maxium_1(a,b,c) 1234567891011121314151617181920212223242526272829function varargout = maxium_1(varargin)% varargin=[a,b,c];% varargout=[max,num];a=varargin&#123;1&#125;;b=varargin&#123;2&#125;;c=varargin&#123;3&#125;;%输入变量if nargin==3 %相当于一个输入变量为3的函数 if a&gt;b max="a";num=a; elseif a&lt;b max="b";num=b; elseif num&lt;c max="c";num=c; endendif nargin==2 %相当于一个输入变量为2的函数 if a&gt;b max="a";num=a; elseif a&lt;b max="b",num=b; endend%输出变量if nargout==2 varargout&#123;1&#125;=max; varargout&#123;2&#125;=num;elseif nargout==1 varargout&#123;1&#125;=num;endend 2.元胞数组的应用{} 和（）的区别说明：这里可以解释上面，因为varargin本身是个元胞数组，varargin用{}直接引用a,b,c里面的值（数据类型是数值型） 举例： 123456clc;clear;close;data1_1=&#123;2,3,4;1,1,1&#125;;data2_1=&#123;"a","b","c"&#125;;data1 = &#123;data1_1,"hello";data2_1,3&#125;;data1(2);[A,B,C]=data1&#123;2&#125;&#123;1,:&#125;;]]></content>
      <categories>
        <category>Matlab</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Python入门]]></title>
    <url>%2F2019%2F11%2F24%2Fpython%2F</url>
    <content type="text"><![CDATA[Python输入函数input1234567891011121314year,month,day = input("你的出生年月日:").split()age = 2019-int(year)if int(month) &lt; 11: age = ageelse: if int(month) == 11: if int(day) &lt; 24: age = age else: age = age-1 else: age = age-1print("你的年龄是:&#123;&#125;".format(age))input("") 说明： 1.不能在iuput里面定义数据类型，例如input(int,”…”) 2.缩进非常重要，她表示的是循环、条件等的作用域，是Python精简有层次的灵魂 基础知识一个小游戏： 123456789101112131415161718192021222324252627282930#调用random模块import randommy_number = random.randint(1,10)temp = input("请输入我心里想的一个数字：")guess = int(temp)if my_number == guess: print("""哇，你太棒了！好厉害呢""")else: if my_number &gt; guess: print("哥，你猜的比我小哦") else: print("大了大了，哥")i=0while (guess != my_number) and (i &lt; 3): i = i+1 temp = input("请在输入一次吧，你还有"+str(4-i)+"次机会") guess = int(temp) if my_number == guess: print("""哇，你太棒了！好厉害呢 """) else: if my_number &gt; guess: print("你猜的比我小哦") else: print("大了大了")input("") matlab中： 123i=3;disp("你还有"+num2str(i)+"次机会") %数据类型转换 数据类型整型(整数) 浮点型(小数) 布尔类型：true &amp; false 判断类型格式用type() class() 字符型：python(str) matlab(char) 常用操作符算数操作符(+ - * / // % **) 比较操作符(&gt; &gt;= &lt; &lt;= == !=) 逻辑操作符(and or not) for循环和range()range(1,10,2) 1,3,5,7,9 for i in range(10) 表示循环10次，即使在循环中i的值发生变化，循环开始时i依然是按照i=0，1，2，3，…，9取值 123456for i in range(10): if i%2 != 0: print(i) continue #满足条件直接重新循环，不用执行下面语句，其用法与else类似 i += 2 print(i) 123456for i in range(10): if i%2 != 0: print(i) else: i += 2 print(i)]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[windows环境变量]]></title>
    <url>%2F2019%2F11%2F23%2Fwindows-question%2F</url>
    <content type="text"><![CDATA[什么是环境变量？用户变量当前用户可以对其进行添加、修改或删除 系统变量只有管理员才能添加、修改或删除，由windows定义并应用到所有系统用户 重要系统变量介绍 NUMBER_OF_PROCESSORS变量：代表用户电脑中逻辑处理器的数量 OS变量：表面用户的操作系统 Path变量：规定操作系统在指定的文件路径中查看可执行文件 环境变量的应用实例索引文件夹在用户环境变量中，随意设置一个变量名，然后把路径指定到你的文件夹中或者某个文件（exe)中，接着在运行中（win+r)中输入%变量名%,便可以直接进入文件夹中或者运行该程序 打开应用在用户环境变量Path中添加应用的目录即可 总结 在用户环境变量Path下添加后，均可在win+r中输入程序名，打开程序 如果新添加环境变量（非Path），则需要输入%变量名%才能打开程序 参考： https://zhuanlan.zhihu.com/p/67726501]]></content>
      <categories>
        <category>Windows</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[软件资源分享]]></title>
    <url>%2F2019%2F11%2F23%2FSoftware%2F</url>
    <content type="text"><![CDATA[UltraEdit简介： UltraEdit（原名UltraEdit-32）是跨平台的一套商业性文本编辑器，由IDM Computer Solutions在1994年创造。UltraEdit有很强大的编程功能，支持宏、语法高亮度显示和正则表达式等功能。文件在标签中可以被浏览和编辑。安装需要约30 MB的磁盘空间。UltraEdit也支持以Unicode和hex编辑的模式 。 链接：https://pan.baidu.com/s/11NF30WgbwwGgfL8vf6hDcQ提取码：hqy6]]></content>
      <categories>
        <category>Software</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[学习资料分享]]></title>
    <url>%2F2019%2F09%2F01%2FSource%2F</url>
    <content type="text"><![CDATA[清华大学实验安全教育考试题库链接：https://pan.baidu.com/s/1tYtOwMwS3_OCNdlHnomFMA提取码：dale 电子枪与离子束技术张以忱编著 出版社：冶金工业出版社 链接：https://pan.baidu.com/s/1w1eSFhPQmgxBg4zw_5-gJA提取码：97qj]]></content>
      <categories>
        <category>source</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[GitHub+Hexo 搭建个人主页]]></title>
    <url>%2F2019%2F08%2F29%2FHexo%2BGithub%2F</url>
    <content type="text"><![CDATA[搭建过程中遇到的问题和解决方案（基于win10）说明：整套搭建是参考吴润·RunDouble 1. Sublime Text或者UltraEdit下载安装 一款用于代码、标记和散文的精致文本编辑器，后续的文件编辑用该软件很方便，推荐下载 Download - Sublime Text Download-UltraEdit提取码：hqy6 2. 注册一个GitHub账户 新建一个仓库（repository)：仓库名设置为 用户名.github.io 3. 安装Git3.1 下载安装Git，测试git是否安装成功Git官网 3.2 Git与GitHub账号绑定（实现远程仓库和本地仓库的连接） 配置用户信息: （1）git config –global user.name “GitHub用户名” （2）git config –global user.email “GitHub注册邮箱” 生成ssh密钥文件（实现每次推送不用输密码,建立本地和远程的桥梁）： （1）ssh-keygen -t rsa -C “GitHub注册邮箱” 问题：C:\Users\Rescue\ .ssh文件夹如果只有两个文件，不包括known_hosts时，说明你直接回车，没有按照提示输入’yes’（因为这个我查了半天，我太愚蠢了😂） （2）打开GitHub_Setting_keys页面，新建new SSH Key，标题可以不填，内容是复制‘id_rsa_pub’文件内容 测试密钥设置成功 4. 安装Hexo4.1 准备工作（1）安装Node.js，配置Hexo的环境变量 （2）检测安装是否成功，成功时如下图： 4.2 开始安装（1）在电脑上创建一个文件夹（Hexo，Blog内容，Github远程仓库都存放在里面） （2）使用npm命令安装Hexo 在当前文件夹里面，输入npm install -g hexo-cli，如下图: （3）初始化博客 git bash下输入 hexo init blog，如下图 4.3 推送网站（1）站点配置文件 （2）保存站点配置文件 问题 解决 输入：npm install hexo-renderer-marked@2.0.0 （3）测试博客上线 hexo clean hexo g hexo d （4）打开网页输入 用户名.github.io 5. 主题设置5.1 Next主题下载https://www.jianshu.com/p/b20fc983005f 5.2 Next主题配置（1）about链接 需要在根目录下的source(_posts)文件中新建文件夹about,里面创建index.md文件 （2）头像上传 需要在根目录下的source(_posts)文件中新建文件夹”uploads”,里面放入照片 https://www.jianshu.com/p/3a05351a37dc （3）背景设置 https://blog.csdn.net/wang631106979/article/details/51375184 （4）开启搜索 https://yashuning.github.io/2018/06/29/hexo-Next-主题添加搜索功能 6. 域名更换(建议全部搭建完没问题更换)6.1 购买域名阿里云 6.2 域名解析Y大宽 7. 额外出现的问题7.1 Fatal: TaskCanceldException encountered上传远程仓库时突然需要输用户名和密码 根目录下config.yml文件中修改repo git@github.com:liweiwei12345/liweiwei12345.github.io.git https://blog.csdn.net/hhgggggg/article/details/77853665 7.2 ping github 请求超时（1）首先确定github是否ping的通，是否是端口的问题https://blog.csdn.net/u010377383/article/details/79365049 （2）如果是翻墙的原因https://blog.csdn.net/sdta25196/article/details/80203152 如果翻墙失败了，那就将当时翻墙的操作给删除就可以了 小建议：先用管理员权限打开记事本，然后将hosts文件里的内容复制进去，进行修改，最后替换它]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
  </entry>
</search>
